---
export interface Props {
  href: string;
  text: string;
  className?: string;
  variant: "primary" | "secondary";
}

const { href, text, className, variant } = Astro.props;

const getThemeStyle = (variant: "primary" | "secondary") => {
  if (variant === "primary") {
    return "bg-transparent relative border-secondary-200 hover:border-primary-400 hover:bg-secondary-950/40 ";
  }
  return "bg-transparent relative border-primary-400 hover:border-secondary-200 hover:bg-primary-950/40";
};

const getTextColor = (variant: "primary" | "secondary") => {
  if (variant === "primary") {
    return "text-secondary-200 hover:text-primary-400";
  }
  return "text-primary-400 hover:text-secondary-200";
};

const base =
  "rounded-lg outline-none relative overflow-hidden px-6 py-3 border";
const animation = "duration-300 ease-linear";
---

<a
  href={href}
  class={` 
    ${base} 
    ${animation}
    ${getTextColor(variant)}
    ${getThemeStyle(variant)} 
    hover:after:opacity-100 hover:after:scale-[2.5] 
    ${className}`}
>
  <span class={`relative  z-10`}>
    {text}
  </span>
</a>
